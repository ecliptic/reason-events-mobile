// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var StateTypes = require("./StateTypes.bs.js");

function toOption(prim) {
  if (prim == null) {
    return /* None */0;
  } else {
    return [prim];
  }
}

function assign(prim, prim$1) {
  return Object.assign(prim, prim$1);
}

function empty() {
  return { };
}

var prefix = "USERS";

var actionTypes = {
  setUser: "USERS:SET_USER"
};

var actions = {
  setUser: (function (user) {
      return {
              type: actionTypes.setUser,
              reAction: [
                StateTypes.Users[/* SetUser */0],
                user
              ]
            };
    })
};

var initialState = {
  user: /* None */0
};

function reducer(state, action) {
  var state$1 = Js_option.getWithDefault(initialState, (state == null) ? /* None */0 : [state]);
  var match = action.reAction;
  if (!(match == null) && match[0] === StateTypes.Users[/* SetUser */0]) {
    return Object.assign({ }, Object.assign(state$1, {
                    user: match[1]
                  }));
  } else {
    return state$1;
  }
}

var select = {
  events: (function (state) {
      return state.events.items;
    })
};

var actors = /* array */[];

var getWithDefault = Js_option.getWithDefault;

exports.toOption = toOption;
exports.getWithDefault = getWithDefault;
exports.assign = assign;
exports.empty = empty;
exports.prefix = prefix;
exports.actionTypes = actionTypes;
exports.actions = actions;
exports.initialState = initialState;
exports.reducer = reducer;
exports.select = select;
exports.actors = actors;
/* No side effect */
